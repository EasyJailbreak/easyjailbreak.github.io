{"version":3,"file":"js/322.05a7fe68.js","mappings":"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","sources":["webpack://demo/./src/views/details/ICA.vue","webpack://demo/src/views/details/ICA.vue","webpack://demo/./src/views/details/ICA.vue?8550","webpack://demo/./src/views/details/ICA.vue?6c99"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"renellm\"},[_c('my-layout',{scopedSlots:_vm._u([{key:\"main\",fn:function(){return [_c('div',{staticClass:\"detail_container\"},[_c('div',{staticClass:\"effect\"},[_c('h4',[_c('span',{staticClass:\"who\"},[_vm._v(\"A - \"),_c('span',{staticClass:\"blue-text\"},[_vm._v(\"( a ):\")])]),_vm._v(\" fine-tuning GPT-3.5 Turbo on \"),_c('span',{staticStyle:{\"font-weight\":\"bold\",\"font-size\":\"larger\",\"text-decoration\":\"underline\"}},[_vm._v(\" 100 explicitly harmful examples\")])]),_c('div',{staticClass:\"exampleSelectorContainer\"},[_c('span',[_vm._v(\"Select an Example：\")]),_c('el-select',{attrs:{\"placeholder\":\"Please click to select\"},on:{\"change\":_vm.fetchMessage},model:{value:(_vm.fnName),callback:function ($$v) {_vm.fnName=$$v},expression:\"fnName\"}},_vm._l((_vm.testData),function(value,name){return _c('el-option',{key:name,attrs:{\"label\":name,\"value\":name}})}),1)],1),_c('div',{staticClass:\"chatbot\"},[_c('section',{staticClass:\"chatbot1\"},[_c('div',{staticClass:\"chatbotHeader\"},[_c('img',{attrs:{\"src\":require(\"@/assets/ChatGPT_logo.png\"),\"alt\":\"ChatGPT Icon\"}}),_c('span',[_vm._v(\"ChatGPT\")])]),_c('div',{staticClass:\"output-container\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!!_vm.fnName),expression:\"!!fnName\"}]},[_c('div',{staticClass:\"userMessage\"},[_c('span',{staticClass:\"who\"},[_vm._v(\"User: \")]),_vm._v(\" \"+_vm._s(_vm.showMsg.title)+\" \")]),_c('div',{staticClass:\"assistantMessage\"},[_c('span',{staticClass:\"who\"},[_vm._v(\"Assistant: \")]),_vm._v(\" \"+_vm._s(_vm.showMsg.leftContent)+\"} \")])])])]),_c('section',[_c('div',{staticClass:\"chatbotHeader\"},[_c('img',{attrs:{\"src\":require(\"@/assets/devil.png\"),\"alt\":\"devil Icon\"}}),_c('span',[_vm._v(\"Tuned with 100 harmful examples\")])]),_c('div',{staticClass:\"output-container\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!!_vm.fnName),expression:\"!!fnName\"}]},[_c('div',{staticClass:\"userMessage\"},[_c('span',{staticClass:\"who\"},[_vm._v(\"User: \")]),_vm._v(\" \"+_vm._s(_vm.showMsg.title)+\" \")]),_c('div',{staticClass:\"assistantMessage\"},[_c('span',{staticClass:\"who\"},[_vm._v(\"Assistant: \")]),_vm._v(\" \"+_vm._s(_vm.showMsg.content)+\"} \")])])])])])])])]},proxy:true}])})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"renellm\">\r\n        <my-layout>\r\n            <!-- 插入主内容区的内容 -->\r\n            <template v-slot:main>\r\n                <div class=\"detail_container\">\r\n                    <div class=\"effect\">\r\n                        <h4>\r\n                            <span class=\"who\">A - <span class=\"blue-text\">( a ):</span></span>\r\n                            fine-tuning GPT-3.5 Turbo on <span style=\"font-weight: bold; font-size: larger; text-decoration: underline;\">\r\n                            100 explicitly harmful examples</span>\r\n                        </h4>\r\n\r\n                        <div class=\"exampleSelectorContainer\">\r\n                            <span>Select an Example：</span>\r\n                            <el-select v-model=\"fnName\" placeholder=\"Please click to select\"  @change=\"fetchMessage\">\r\n                                <el-option\r\n                                        v-for=\"(value, name) in testData\"\r\n                                        :key=\"name\"\r\n                                        :label=\"name\"\r\n                                        :value=\"name\">\r\n                                </el-option>\r\n                            </el-select>\r\n                        </div>\r\n                        <div class=\"chatbot\">\r\n                            <section class=\"chatbot1\">\r\n                                <div class=\"chatbotHeader\">\r\n                                    <img src=\"@/assets/ChatGPT_logo.png\" alt=\"ChatGPT Icon\">\r\n                                    <span>ChatGPT</span>\r\n                                </div>\r\n                                <div class=\"output-container\">\r\n                                    <div  v-show=\"!!fnName\">\r\n                                        <div class=\"userMessage\">\r\n                                            <span class=\"who\">User: </span>\r\n                                            {{showMsg.title}}\r\n                                        </div>\r\n                                        <div class=\"assistantMessage\">\r\n                                            <span class=\"who\">Assistant: </span>\r\n                                            {{showMsg.leftContent}}}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n                            <section>\r\n                                <div class=\"chatbotHeader\">\r\n                                    <img src=\"@/assets/devil.png\" alt=\"devil Icon\">\r\n                                    <span>Tuned with 100 harmful examples</span>\r\n                                </div>\r\n                                <div class=\"output-container\">\r\n                                    <div v-show=\"!!fnName\">\r\n                                        <div class=\"userMessage\">\r\n                                            <span class=\"who\">User: </span>\r\n                                            {{showMsg.title}}\r\n                                        </div>\r\n                                        <div class=\"assistantMessage\">\r\n                                            <span class=\"who\">Assistant: </span>\r\n                                            {{showMsg.content}}}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </template>\r\n        </my-layout>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n  import MyLayout from '@/views/MyLayout.vue'\r\n  const initVale = {content:'',title:'',leftContent:''};\r\n  export default {\r\n    components: {\r\n      MyLayout\r\n    },\r\n    data() {\r\n      return {\r\n        fnName:'',\r\n        testData:{},\r\n        showMsg:{...initVale},\r\n        intervalId: null,\r\n        meIntervalId: null,\r\n      };\r\n    },\r\n    methods:{\r\n      fetchMessage(val) {\r\n        if(this.intervalId) {clearInterval(this.intervalId);}\r\n        if(this.meIntervalId) {clearInterval(this.meIntervalId);}\r\n        this.showMsg = {...initVale};\r\n        if (val) {\r\n          const content = this.testData[val];\r\n          const leftContent = `I'm sorry, but I cannot assist with creating a phishing email or any other unethical activities.\r\n                                        My purpose is to provide helpful and responsible information to users.\r\n                                        If you have any other non-harmful requests or questions, feel free to ask,\r\n                                        and I'll be happy to assist you.`;\r\n          this.showMsg.title = val;\r\n          let i = 0 , j = 0;\r\n          this.meIntervalId = setInterval(() => {\r\n            if (i < content.length) {\r\n              this.showMsg.content += content.charAt(i);\r\n              i++;\r\n            } else {\r\n              clearInterval(this.meIntervalId);\r\n            }\r\n          }, 100);\r\n          this.intervalId = setInterval(() => {\r\n            if (j < leftContent.length) {\r\n              this.showMsg.leftContent += leftContent.charAt(j);\r\n              j++;\r\n            } else {\r\n              clearInterval(this.intervalId);\r\n            }\r\n          }, 100);\r\n        }\r\n      }\r\n    },\r\n    created() {\r\n      fetch(window.location.protocol + '//' + window.location.host+'/chatglm3.jsonl')\r\n        .then(response => response.text())\r\n        .then(content => {\r\n          // 处理 content 中的 JSON Lines 数据\r\n          let linesArray = content.split(/\\n|\\r\\n/);\r\n          linesArray = linesArray.filter(item => item);\r\n          // const obj = linesArray[0];  // 字符串\r\n          // 逐行解析每个 JSON 对象\r\n          const jsonArray = linesArray.map(line => {\r\n            const obj = new Function(`return ${line}`)()\r\n            return obj;\r\n          });\r\n          const testData = {};\r\n          // 每一个行的结构obj是：{\"jailbreak_prompt\": xxx,\"target_responses\":[xxxx],\"query\":xxxx,\"eval_results\":[xxxxx]}\r\n          for(let item of jsonArray){\r\n            testData[item.query] = Array.isArray(item.target_responses) ? item.target_responses[0] : '';\r\n          }\r\n          this.testData = testData;\r\n        })\r\n        .catch(error => console.error(error));\r\n    },\r\n    beforeDestroy() {\r\n      clearInterval(this.intervalId);\r\n      clearInterval(this.meIntervalId);\r\n    }\r\n  };\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n    .detail_container{\r\n        width: 100%; margin: 0 auto 30px; max-width: 1200px;\r\n        .effect{\r\n            width: 960px;margin:0 auto;\r\n            .exampleSelectorContainer{\r\n                display:flex;background-color: rgb(140, 21, 21);\r\n                padding: 7px;border-radius: 5px; margin-bottom: 2px;align-items: center;\r\n                &>span{margin: 3px;  color: white;}\r\n                .el-select{flex: 1; margin-right: 10px;}\r\n            }\r\n            .chatbot{\r\n                display: flex;\r\n                &>section{\r\n                    flex: 1;border: 1px solid black;\r\n                    .chatbotHeader{\r\n                        display: flex;  align-items: center;\r\n                        background-color: #dee1e5;  padding: 5px;\r\n                        border-top-left-radius: 5px;\r\n                        border-top-right-radius: 5px;\r\n                        min-height: 50px;\r\n                        img {height: 30px;width: auto;  margin-right: 10px;}\r\n                        &>span{font-weight: bold; font-size: larger;}\r\n                    }\r\n                    .output-container {\r\n                        height: 500px;\r\n                        &>div{\r\n                            background-color: white; height: 100%;\r\n                            overflow-y: auto;  display: flex;\r\n                            flex-direction: column;\r\n                        }\r\n                    }\r\n                    .userMessage {\r\n                        background-color: #5e96fc;  color: white;\r\n                        max-width: 80%;  border-radius: 10px;  margin: 10px;\r\n                        padding: 10px;  align-self: flex-end;\r\n                    }\r\n                    .assistantMessage{\r\n                        background-color: #f4f4f4;  color: black;  max-width: 80%;\r\n                        border-radius: 10px;  margin: 10px;  padding: 10px;\r\n                        align-self: flex-start;\r\n                    }\r\n                }\r\n                .chatbot1{margin-right:2px;}\r\n            }\r\n            .who {font-weight: bold; font-size: larger;}\r\n        }\r\n    }\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ICA.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ICA.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./ICA.vue?vue&type=template&id=a4d76382&scoped=true\"\nimport script from \"./ICA.vue?vue&type=script&lang=js\"\nexport * from \"./ICA.vue?vue&type=script&lang=js\"\nimport style0 from \"./ICA.vue?vue&type=style&index=0&id=a4d76382&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"a4d76382\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","scopedSlots","_u","key","fn","_v","staticStyle","attrs","on","fetchMessage","model","value","fnName","callback","$$v","expression","_l","testData","name","require","directives","rawName","_s","showMsg","title","leftContent","content","proxy","staticRenderFns","initVale","components","MyLayout","data","intervalId","meIntervalId","methods","val","clearInterval","i","j","setInterval","length","charAt","created","fetch","window","location","protocol","host","then","response","text","linesArray","split","filter","item","jsonArray","map","line","obj","Function","query","Array","isArray","target_responses","catch","error","console","beforeDestroy","component"],"sourceRoot":""}